// Generated by data binding compiler. Do not edit!
package com.example.sweetbakery2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.sweetbakery2.R;
import com.example.sweetbakery2.viewmodel.AddProductViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityAddProductBinding extends ViewDataBinding {
  @NonNull
  public final Button btnBack;

  @NonNull
  public final Button btnSaveProduct;

  @NonNull
  public final Button btnUploadImage;

  @NonNull
  public final EditText etProductName;

  @NonNull
  public final EditText etProductPrice;

  @NonNull
  public final ImageView ivProductImage;

  @Bindable
  protected AddProductViewModel mViewModel;

  protected ActivityAddProductBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button btnBack, Button btnSaveProduct, Button btnUploadImage, EditText etProductName,
      EditText etProductPrice, ImageView ivProductImage) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnBack = btnBack;
    this.btnSaveProduct = btnSaveProduct;
    this.btnUploadImage = btnUploadImage;
    this.etProductName = etProductName;
    this.etProductPrice = etProductPrice;
    this.ivProductImage = ivProductImage;
  }

  public abstract void setViewModel(@Nullable AddProductViewModel viewModel);

  @Nullable
  public AddProductViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static ActivityAddProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_add_product, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityAddProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityAddProductBinding>inflateInternal(inflater, R.layout.activity_add_product, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityAddProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_add_product, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityAddProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityAddProductBinding>inflateInternal(inflater, R.layout.activity_add_product, null, false, component);
  }

  public static ActivityAddProductBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityAddProductBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityAddProductBinding)bind(component, view, R.layout.activity_add_product);
  }
}
